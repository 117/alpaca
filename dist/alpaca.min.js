import t from"bottleneck";import e from"qs";import r from"isomorphic-unfetch";import a from"isomorphic-ws";import i from"eventemitter3";function s(t,e,r,a){return new(r||(r=Promise))((function(i,s){function n(t){try{c(a.next(t))}catch(t){s(t)}}function o(t){try{c(a.throw(t))}catch(t){s(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(n,o)}c((a=a.apply(t,e||[])).next())}))}var n={account:"https://api.alpaca.markets/v2",market_data:"https://data.alpaca.markets/v2"},o={account:"wss://api.alpaca.markets/stream",account_paper:"wss://paper-api.alpaca.markets/stream",market_data:t=>`wss://stream.data.alpaca.markets/v2/${t}`};function c(t){if(t)try{return Object.assign(Object.assign({},t),{raw:()=>t,created_at:new Date(t.created_at),updated_at:new Date(t.updated_at),submitted_at:new Date(t.submitted_at),filled_at:new Date(t.filled_at),expired_at:new Date(t.expired_at),canceled_at:new Date(t.canceled_at),failed_at:new Date(t.failed_at),replaced_at:new Date(t.replaced_at),qty:p(t.qty),filled_qty:p(t.filled_qty),type:t.type,side:t.side,time_in_force:t.time_in_force,limit_price:p(t.limit_price),stop_price:p(t.stop_price),filled_avg_price:p(t.filled_avg_price),status:t.status,legs:u(t.legs),trail_price:p(t.trail_price),trail_percent:p(t.trail_percent),hwm:p(t.hwm)})}catch(t){throw new Error(`Order parsing failed. ${t.message}`)}}function u(t){return t?t.map((t=>c(t))):void 0}function d(t){if(t)try{return Object.assign(Object.assign({},t),{raw:()=>t,avg_entry_price:p(t.avg_entry_price),qty:p(t.qty),side:t.side,market_value:p(t.market_value),cost_basis:p(t.cost_basis),unrealized_pl:p(t.unrealized_pl),unrealized_plpc:p(t.unrealized_plpc),unrealized_intraday_pl:p(t.unrealized_intraday_pl),unrealized_intraday_plpc:p(t.unrealized_intraday_plpc),current_price:p(t.current_price),lastday_price:p(t.lastday_price),change_today:p(t.change_today)})}catch(t){throw new Error(`Position parsing failed. ${t.message}`)}}function l(t){if(t)try{return Object.assign(Object.assign({},t),{raw:()=>t,cum_qty:p(t.cum_qty),leaves_qty:p(t.leaves_qty),price:p(t.price),qty:p(t.qty),side:t.side,type:t.type})}catch(t){throw new Error(`TradeActivity parsing failed. ${t.message}`)}}function h(t){if(t)try{return Object.assign(Object.assign({},t),{raw:()=>t,net_amount:p(t.net_amount),qty:p(t.qty),per_share_amount:p(t.per_share_amount)})}catch(t){throw new Error(`NonTradeActivity parsing failed. ${t.message}`)}}function p(t){return void 0===t?t:parseFloat(t)}var _={account:function(t){if(t)try{return Object.assign(Object.assign({},t),{raw:()=>t,buying_power:p(t.buying_power),regt_buying_power:p(t.regt_buying_power),daytrading_buying_power:p(t.daytrading_buying_power),cash:p(t.cash),created_at:new Date(t.created_at),portfolio_value:p(t.portfolio_value),multiplier:p(t.multiplier),equity:p(t.equity),last_equity:p(t.last_equity),long_market_value:p(t.long_market_value),short_market_value:p(t.short_market_value),initial_margin:p(t.initial_margin),maintenance_margin:p(t.maintenance_margin),last_maintenance_margin:p(t.last_maintenance_margin),sma:p(t.sma),status:t.status})}catch(t){throw new Error(`Account parsing failed. ${t.message}`)}},activities:function(t){if(t)try{return t.map((t=>"FILL"===t.activity_type?l(t):h(t)))}catch(t){throw new Error(`Activity parsing failed. ${t.message}`)}},clock:function(t){if(t)try{return{raw:()=>t,timestamp:new Date(t.timestamp),is_open:t.is_open,next_open:new Date(t.next_open),next_close:new Date(t.next_close)}}catch(t){throw new Error(`Order parsing failed. ${t.message}`)}},nonTradeActivity:h,order:c,orders:u,canceled_orders:function(t){return t?t.map((t=>function(t){if(!t)return;let e=t.body;delete t.body;try{return Object.assign(Object.assign({},t),{order:Object.assign(Object.assign({},e),{raw:()=>e,created_at:new Date(e.created_at),updated_at:new Date(e.updated_at),submitted_at:new Date(e.submitted_at),filled_at:new Date(e.filled_at),expired_at:new Date(e.expired_at),canceled_at:new Date(e.canceled_at),failed_at:new Date(e.failed_at),replaced_at:new Date(e.replaced_at),qty:p(e.qty),filled_qty:p(e.filled_qty),type:e.type,side:e.side,time_in_force:e.time_in_force,limit_price:p(e.limit_price),stop_price:p(e.stop_price),filled_avg_price:p(e.filled_avg_price),status:e.status,legs:u(e.legs),trail_price:p(e.trail_price),trail_percent:p(e.trail_percent),hwm:p(e.hwm)})})}catch(t){throw new Error(`Order parsing failed. ${t.message}`)}}(t))):void 0},position:d,positions:function(t){return t?t.map((t=>d(t))):void 0},tradeActivity:l,pageOfTrades:function(t){if(t)try{return{raw:()=>t,trades:t.trades.map((t=>Object.assign(Object.assign({raw:()=>t},t),{t:new Date(t.t)}))),symbol:t.symbol,next_page_token:t.next_page_token}}catch(t){throw new Error(`PageOfTrades parsing failed "${t.message}"`)}},pageOfQuotes:function(t){if(t)try{return{raw:()=>t,quotes:t.quotes.map((t=>Object.assign(Object.assign({raw:()=>t},t),{t:new Date(t.t)}))),symbol:t.symbol,next_page_token:t.next_page_token}}catch(t){throw new Error(`PageOfTrades parsing failed "${t.message}"`)}},pageOfBars:function(t){if(t)try{return{raw:()=>t,bars:t.bars.map((t=>Object.assign(Object.assign({raw:()=>t},t),{t:new Date(t.t)}))),symbol:t.symbol,next_page_token:t.next_page_token}}catch(t){throw new Error(`PageOfTrades parsing failed "${t.message}"`)}}};const m="undefined"!=typeof fetch?fetch:r;class y{constructor(e){if(this.params=e,this.limiter=new t({reservoir:200,reservoirRefreshAmount:200,reservoirRefreshInterval:6e4,maxConcurrent:1,minTime:200}),"paper"in e.credentials||"key"in e.credentials&&e.credentials.key.startsWith("A")||(e.credentials.paper=!0),"access_token"in e.credentials&&("key"in e.credentials||"secret"in e.credentials))throw new Error("can't create client with both default and oauth credentials")}isAuthenticated(){return s(this,void 0,void 0,(function*(){try{return yield this.getAccount(),!0}catch(t){return!1}}))}getAccount(){return s(this,void 0,void 0,(function*(){return _.account(yield this.request({method:"GET",url:`${n.account}/account`}))}))}getOrder(t){return s(this,void 0,void 0,(function*(){return _.order(yield this.request({method:"GET",url:`${n.account}/orders/${t.order_id||t.client_order_id}`,data:{nested:t.nested}}))}))}getOrders(t){return s(this,void 0,void 0,(function*(){return _.orders(yield this.request({method:"GET",url:`${n.account}/orders`,data:t}))}))}placeOrder(t){return s(this,void 0,void 0,(function*(){return _.order(yield this.request({method:"POST",url:`${n.account}/orders`,data:t}))}))}replaceOrder(t){return s(this,void 0,void 0,(function*(){return _.order(yield this.request({method:"PATCH",url:`${n.account}/orders/${t.order_id}`,data:t}))}))}cancelOrder(t){return this.request({method:"DELETE",url:`${n.account}/orders/${t.order_id}`})}cancelOrders(){return s(this,void 0,void 0,(function*(){return _.canceled_orders(yield this.request({method:"DELETE",url:`${n.account}/orders`}))}))}getPosition(t){return s(this,void 0,void 0,(function*(){return _.position(yield this.request({method:"GET",url:`${n.account}/positions/${t.symbol}`}))}))}getPositions(){return s(this,void 0,void 0,(function*(){return _.positions(yield this.request({method:"GET",url:`${n.account}/positions`}))}))}closePosition(t){return s(this,void 0,void 0,(function*(){return _.order(yield this.request({method:"DELETE",url:`${n.account}/positions/${t.symbol}`}))}))}closePositions(){return s(this,void 0,void 0,(function*(){return _.orders(yield this.request({method:"DELETE",url:`${n.account}/positions`}))}))}getAsset(t){return this.request({method:"GET",url:`${n.account}/assets/${t.asset_id_or_symbol}`})}getAssets(t){return this.request({method:"GET",url:`${n.account}/assets`,data:t})}getWatchlist(t){return this.request({method:"GET",url:`${n.account}/watchlists/${t.uuid}`})}getWatchlists(){return this.request({method:"GET",url:`${n.account}/watchlists`})}createWatchlist(t){return this.request({method:"POST",url:`${n.account}/watchlists`,data:t})}updateWatchlist(t){return this.request({method:"PUT",url:`${n.account}/watchlists/${t.uuid}`,data:t})}addToWatchlist(t){return this.request({method:"POST",url:`${n.account}/watchlists/${t.uuid}`,data:t})}removeFromWatchlist(t){return this.request({method:"DELETE",url:`${n.account}/watchlists/${t.uuid}/${t.symbol}`})}deleteWatchlist(t){return this.request({method:"DELETE",url:`${n.account}/watchlists/${t.uuid}`})}getCalendar(t){return this.request({method:"GET",url:`${n.account}/calendar`,data:t})}getClock(){return s(this,void 0,void 0,(function*(){return _.clock(yield this.request({method:"GET",url:`${n.account}/clock`}))}))}getAccountConfigurations(){return this.request({method:"GET",url:`${n.account}/account/configurations`})}updateAccountConfigurations(t){return this.request({method:"PATCH",url:`${n.account}/account/configurations`,data:t})}getAccountActivities(t){return s(this,void 0,void 0,(function*(){return t.activity_types&&Array.isArray(t.activity_types)&&(t.activity_types=t.activity_types.join(",")),_.activities(yield this.request({method:"GET",url:`${n.account}/account/activities${t.activity_type?"/".concat(t.activity_type):""}`,data:Object.assign(Object.assign({},t),{activity_type:void 0})}))}))}getPortfolioHistory(t){return this.request({method:"GET",url:`${n.account}/account/portfolio/history`,data:t})}getTrades(t){return s(this,void 0,void 0,(function*(){return _.pageOfTrades(yield this.request({method:"GET",url:`${n.market_data}/stocks/${t.symbol}/trades`,data:Object.assign(Object.assign({},t),{symbol:void 0})}))}))}getQuotes(t){return s(this,void 0,void 0,(function*(){return _.pageOfQuotes(yield this.request({method:"GET",url:`${n.market_data}/stocks/${t.symbol}/quotes`,data:Object.assign(Object.assign({},t),{symbol:void 0})}))}))}getBars(t){return s(this,void 0,void 0,(function*(){return _.pageOfBars(yield this.request({method:"GET",url:`${n.market_data}/stocks/${t.symbol}/bars`,data:Object.assign(Object.assign({},t),{symbol:void 0})}))}))}request(t){return s(this,void 0,void 0,(function*(){let r={};"access_token"in this.params.credentials?r.Authorization=`Bearer ${this.params.credentials.access_token}`:(r["APCA-API-KEY-ID"]=this.params.credentials.key,r["APCA-API-SECRET-KEY"]=this.params.credentials.secret,this.params.credentials.paper&&(t.url=t.url.replace("api.","paper-api.")));for(let[e,r]of Object.entries(t.data))r instanceof Date&&(t.data[e]=r.toISOString());let a="";t.data&&"POST"!=t.method&&"PATCH"!=t.method&&(a="?".concat(e.stringify(t.data)),t.data=void 0);const i=()=>m(t.url.concat(a),{method:t.method,headers:r,body:JSON.stringify(t.data)}),s=this.params.rate_limit?()=>this.limiter.schedule(i):i;let n,o={};try{if(n=yield s(),null!=t.isJson||!t.isJson)return n.ok;o=yield n.json()}catch(t){throw console.error(t),o}if("code"in o||"message"in o)throw o;return o}))}}class g extends i{constructor(t){switch(super(),this.params=t,this.subscriptions=[],this.authenticated=!1,t.stream){case"account":this.host=t.credentials.key.startsWith("PK")?o.account_paper:o.account;break;case"market_data":break;default:this.host="unknown"}this.connection=new a(this.host),this.connection.onopen=()=>{this.authenticated||this.connection.send(JSON.stringify({action:"authenticate",data:{key_id:t.credentials.key,secret_key:t.credentials.secret}})),this.emit("open",this)},this.connection.onclose=()=>this.emit("close",this),this.connection.onmessage=t=>{const e=JSON.parse(t.data);if("stream"in e&&"authorization"==e.stream){if("authorized"!=e.data.status)throw this.connection.close(),new Error("There was an error in authorizing your websocket connection. Object received: "+JSON.stringify(e,null,2));this.authenticated=!0,this.emit("authenticated",this),console.log("Connected to the websocket.")}if(this.emit("message",e),"stream"in e){const t={trade_updates:"trade_updates",account_updates:"account_updates",T:"trade",Q:"quote",AM:"aggregate_minute"};this.emit(t[e.stream.split(".")[0]],e.data)}},this.connection.onerror=t=>{this.emit("error",t)}}on(t,e){return super.on(t,e)}send(t){if(!this.authenticated)throw new Error("You can't send a message until you are authenticated!");return"object"==typeof t&&(t=JSON.stringify(t)),this.connection.send(t),this}subscribe(t){return this.subscriptions.push(...t),this.send(JSON.stringify({action:"listen",data:{streams:t}}))}unsubscribe(t){for(let e=0,r=this.subscriptions.length;e<r;e++)t.includes(this.subscriptions[e])&&this.subscriptions.splice(e,1);return this.send(JSON.stringify({action:"unlisten",data:{streams:t}}))}}var f={AlpacaClient:y,AlpacaStream:g};export default f;export{y as AlpacaClient,g as AlpacaStream};
